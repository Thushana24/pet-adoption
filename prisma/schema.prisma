// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  email     String @unique
  password  String

  pets Pet[] @relation("PetOwner")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pet {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  age         String
  color       String
  description String
  contact     String

  isForAdoption Boolean @default(true)
  isForSale     Boolean @default(false)
  price         Float?

  location  String
  imageUrls String[]

  vaccinated Boolean @default(false)
  dewormed   Boolean @default(false)

  ownerId String? @db.ObjectId
  owner   User?   @relation(name: "PetOwner", fields: [ownerId], references: [id])

  petTypeId String?  @db.ObjectId
  petType   PetType? @relation(fields: [petTypeId], references: [id])

  breedId String? @db.ObjectId
  breed   Breed?  @relation(fields: [breedId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PetType {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  name   String  @unique
  pets   Pet[]
  breeds Breed[]
}

model Breed {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name      String  @unique
  petTypeId String  @db.ObjectId
  petType   PetType @relation(fields: [petTypeId], references: [id])
  pets      Pet[]
}
